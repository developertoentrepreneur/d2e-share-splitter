openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /users/{user_pk}/pie/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /users/{user_pk}/pie{format}:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{username}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /auth-token/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - auth-token
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        jobTitle:
          type: string
          maxLength: 1024
        yearSalary:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - jobTitle
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
